package StarTrek;

import java.util.Random;

import Untouchables.WebGadget;

public class Game {

	private int e = 10000;
	private int t = 8;

    public int EnergyRemaining() {
        return e;
    }

    public void setTorpedoes(int value) {
            t = value;
        }
    public int getTorpedoes() {
            return t;
        
    }

    public void fireWeapon(WebGadget wg) {
        fireWeapon(new Galaxy(wg));
    }

    public void fireWeapon(Galaxy wg) {
        if (wg.parameter("command").equals("phaser")) 
			firePhaser(wg);
		else if (wg.parameter("command").equals("photon"))
			firePhoton(wg);
	}
    
    
    private void firePhaser(Galaxy wg)
    {
    	int amount = Integer.parseInt(wg.parameter("amount"));
		Klingon enemy = (Klingon) wg.variable("target");
		if (e >= amount) {
			int distance = enemy.distance();
			if (distance > 4000) {
				wg.writeLine("Klingon out of range of phasers at " + distance + " sectors...");
			} else {
				determinePhaserDamage(wg, enemy);
			}
			e -= amount;

		} else {
			wg.writeLine("Insufficient energy to fire phasers!");
		}
    }
    
    private void firePhoton(Galaxy wg)
    {
    	Klingon enemy = (Klingon) wg.variable("target");
		if (t  > 0) {
			int distance = enemy.distance();
			if ((rnd(4) + ((distance / 500) + 1) > 7)) {
				wg.writeLine("Torpedo missed Klingon at " + distance + " sectors...");
			} else {
				
				determinePhotonDamage(wg, enemy);		
			}
			t -= 1;

		} else {
			wg.writeLine("No more photon torpedoes!");
		}
	}

	private void determinePhaserDamage(Galaxy wg, Klingon enemy) {
		
		int amount = Integer.parseInt(wg.parameter("amount"));
		int distance = enemy.distance();
		
		int	damage = amount - (((amount /20)* distance /200) + rnd(200));
		if (damage < 1)
			damage = 1;
		wg.writeLine("Phasers hit Klingon at " + distance + " sectors with " + damage + " units");
		setDamage(wg, enemy, damage);
	}

	private void setDamage(Galaxy wg, Klingon enemy, int damage) {
		if (damage < enemy.getEnergy()) {
			enemy.setEnergy(enemy.getEnergy() - damage);
			wg.writeLine("Klingon has " + enemy.getEnergy() + " remaining");
		} else {
			wg.writeLine("Klingon destroyed!");
			enemy.delete();
		}
	}
	
	private void determinePhotonDamage(Galaxy wg, Klingon enemy) {
		
		int distance = enemy.distance();
		
		int damage = 800 + rnd(50);
		wg.writeLine("Photons hit Klingon at " + distance + " sectors with " + damage + " units");
		
		setDamage(wg, enemy, damage);
	}
    

    // note we made generator public in order to mock it
    // it's ugly, but it's telling us something about our *design!* ;-)
	public static Random generator = new Random();
	private static int rnd(int maximum) {
		return generator.nextInt(maximum);
	}


}
